name: CI arm64

# github.repository has been used to ensure CI is only run on the repo where
# self-hosted runners are installed. This will prevent [self-hosted, ARM64] CI failing on forks

on: [push, pull_request]
env:
  ARCH: arm64
  CC: gcc
  CONTAINER_NAMESPACE: ghcr.io/opendataplane/odp-docker-images
  OS: ubuntu_20.04

jobs:

  Build:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    strategy:
      fail-fast: false
      matrix:
        cc: [gcc, clang]
        conf: ['', 'CFLAGS=-O3', 'CFLAGS=-O1', 'CFLAGS=-O0 --enable-debug=full', 'CFLAGS=-pedantic',
               '--enable-lto', '--enable-lto --enable-abi-compat', '--enable-pcapng-support']
        exclude:
          - cc: clang
            conf: '--enable-lto'
          - cc: clang
            conf: '--enable-lto --enable-abi-compat'
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${{matrix.cc}}"
               -e CONF="${{matrix.conf}}" $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native /odp/scripts/ci/build_${ARCH}.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name config.log -exec cat {} \;

  Build_static_u22:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    env:
      OS: ubuntu_22.04
      CONF: "--disable-shared --without-openssl --without-pcap"
    strategy:
      fail-fast: false
      matrix:
        cc_ver: [10, 11, 12]
        conf: ['', '--enable-lto']
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="gcc-${{matrix.cc_ver}}" -e CXX="g++-${{matrix.cc_ver}}"
               -e CONF="${CONF} ${{matrix.conf}}" $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native /odp/scripts/ci/build_static.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name config.log -exec cat {} \;

  Build_OS:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    strategy:
      fail-fast: false
      matrix:
        cc: [gcc, clang]
        os: ['ubuntu_18.04', 'rocky_linux_8']
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${{matrix.cc}}"
               -e CONF="${CONF}" $CONTAINER_NAMESPACE/odp-ci-${{matrix.os}}-${ARCH}-native /odp/scripts/ci/build_${ARCH}.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name config.log -exec cat {} \;

  Build_gcc_u22:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    env:
      OS: ubuntu_22.04
    strategy:
      fail-fast: false
      matrix:
        cc_ver: [10, 11, 12]
        conf: ['', '--enable-abi-compat']
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="gcc-${{matrix.cc_ver}}" -e CXX="g++-${{matrix.cc_ver}}"
               -e CONF="${{matrix.conf}}" $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native /odp/scripts/ci/build_${ARCH}.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name config.log -exec cat {} \;

  Build_out-of-tree:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${CC}"
               -e CONF="${CONF}" $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native /odp/scripts/ci/out_of_tree.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name config.log -exec cat {} \;

  Run_distcheck:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    strategy:
      fail-fast: false
      matrix:
        conf: ['--enable-user-guides', '--enable-user-guides --enable-abi-compat']
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      # Ignore distcheck failure (caused by the first 'make check' run unmounting huge pages)
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${{matrix.cc}}"
               -e CONF="${{matrix.conf}}" $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native /odp/scripts/ci/distcheck.sh || true
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name "*.trs" | xargs grep -l '^.test-result. FAIL' | while read trs ; do echo FAILURE detected at $trs; cat ${trs%%.trs}.log ; done

  Run:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    strategy:
      fail-fast: false
      matrix:
        cc: [gcc, clang]
        conf: ['', '--enable-abi-compat', '--enable-deprecated --enable-helper-deprecated --enable-debug=full',
               '--enable-dpdk-zero-copy --disable-static-applications',
               '--disable-host-optimization --enable-event-validation=warn',
               '--disable-host-optimization --enable-abi-compat',
               '--without-openssl --without-pcap']
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${{matrix.cc}}" -e ARCH="${ARCH}"
               -e CXX=g++-10 -e CONF="${{matrix.conf}}" $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native /odp/scripts/ci/check.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name "*.trs" | xargs grep -l '^.test-result. FAIL' | while read trs ; do echo FAILURE detected at $trs; cat ${trs%%.trs}.log ; done

  Run_CFLAGS:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    strategy:
      fail-fast: false
      matrix:
        cc: [gcc, clang]
        cflags: ['-march=armv8.2-a -O2', '-march=armv8-a+lse -O2']
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${{matrix.cc}}" -e ARCH="${ARCH}"
               -e CXX=g++-10 -e CFLAGS="${{matrix.cflags}}" $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native /odp/scripts/ci/check.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name "*.trs" | xargs grep -l '^.test-result. FAIL' | while read trs ; do echo FAILURE detected at $trs; cat ${trs%%.trs}.log ; done

  Run_OS:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu_18.04', 'ubuntu_22.04-openssl']
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${CC}" -e ARCH="${ARCH}"
               -e CONF="${CONF}" $CONTAINER_NAMESPACE/odp-ci-${{matrix.os}}-${ARCH}-native /odp/scripts/ci/check.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name "*.trs" | xargs grep -l '^.test-result. FAIL' | while read trs ; do echo FAILURE detected at $trs; cat ${trs%%.trs}.log ; done

  Run_sched_config:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${CC}" -e ARCH="${ARCH}"
               -e CONF="${CONF}" -e ODP_CONFIG_FILE=/odp/platform/linux-dpdk/test/sched-basic.conf $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native /odp/scripts/ci/check.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name "*.trs" | xargs grep -l '^.test-result. FAIL' | while read trs ; do echo FAILURE detected at $trs; cat ${trs%%.trs}.log ; done

  Run_stash_config:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${CC}" -e ARCH="${ARCH}"
               -e CONF="${CONF}" -e ODP_CONFIG_FILE=/odp/platform/linux-dpdk/test/stash-custom.conf $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native /odp/scripts/ci/check.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name "*.trs" | xargs grep -l '^.test-result. FAIL' | while read trs ; do echo FAILURE detected at $trs; cat ${trs%%.trs}.log ; done

  Run_scheduler_sp:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${CC}" -e ARCH="${ARCH}"
               -e CONF="${CONF}" -e ODP_SCHEDULER=sp $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native /odp/scripts/ci/check.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name "*.trs" | xargs grep -l '^.test-result. FAIL' | while read trs ; do echo FAILURE detected at $trs; cat ${trs%%.trs}.log ; done

  Run_process_mode:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${CC}" -e ARCH="${ARCH}"
               -e CONF="${CONF}" -e ODP_CONFIG_FILE=/odp/platform/linux-dpdk/test/process-mode.conf
               -e ODPH_PROC_MODE=1 $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native /odp/scripts/ci/check.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name "*.trs" | xargs grep -l '^.test-result. FAIL' | while read trs ; do echo FAILURE detected at $trs; cat ${trs%%.trs}.log ; done

  Run_dpdk-20_11:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${CC}" -e ARCH="${ARCH}"
               -e CONF="${CONF}" $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native-dpdk_20.11 /odp/scripts/ci/check.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name "*.trs" | xargs grep -l '^.test-result. FAIL' | while read trs ; do echo FAILURE detected at $trs; cat ${trs%%.trs}.log ; done

  Run_dpdk-21_11:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${CC}" -e ARCH="${ARCH}"
               -e CONF="${CONF}" $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native-dpdk_21.11 /odp/scripts/ci/check.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name "*.trs" | xargs grep -l '^.test-result. FAIL' | while read trs ; do echo FAILURE detected at $trs; cat ${trs%%.trs}.log ; done

  Run_dpdk-22_11:
    if: ${{ github.repository == 'OpenDataPlane/odp-dpdk' }}
    runs-on: [self-hosted, ARM64]
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v3
      - run: sudo docker run -i -v `pwd`:/odp --privileged --shm-size 8g -e CC="${CC}" -e ARCH="${ARCH}"
               -e CONF="${CONF}" $CONTAINER_NAMESPACE/odp-ci-${OS}-${ARCH}-native-dpdk_22.11 /odp/scripts/ci/check.sh
      - name: Failure log
        if: ${{ failure() }}
        run: find . -name "*.trs" | xargs grep -l '^.test-result. FAIL' | while read trs ; do echo FAILURE detected at $trs; cat ${trs%%.trs}.log ; done
